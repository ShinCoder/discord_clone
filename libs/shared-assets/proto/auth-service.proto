syntax="proto3";

package com.auth_service;

import "common.proto";

service AuthServiceAuthModule {
    rpc Register (RegisterDto) returns (RegisterResult) {};
    rpc Login (LoginDto) returns (LoginResult) {};
    rpc Verify (VerifyDto) returns (VerifyResult) {};
    rpc Refresh (RefreshDto) returns (RefreshResult) {};
    rpc Logout (LogoutDto) returns (LogoutResult) {};
}

service AuthServiceAccountModule {
    rpc GetAccount (GetAccountDto) returns (GetAccountResult) {};
    rpc GetAccounts (GetAccountsDto) returns (GetAccountsResult) {};
    rpc CreateOrUpdateRelationship (CreateOrUpdateRelationshipDto) returns (CreateOrUpdateRelationshipResult) {};
    rpc DeleteRelationship (DeleteRelationshipDto) returns (DeleteRelationshipResult) {};
    rpc GetFriends (GetFriendsDto) returns (GetFriendsResult) {};
}

enum AccountStatus {
    NOT_VERIFIED = 0;
    ACTIVE = 1;
    DISABLED = 2;
}

enum RelationshipStatus {
    REQUESTING = 0;
    PENDING = 1;
    FRIEND = 2;
    BLOCKED = 3;
    BEING_BLOCKED = 4;
}

message RelationshipDto {
    string id = 1;
    string accountId = 2;
    string targetId = 3;
    RelationshipStatus status = 4;
    optional RelationshipStatus previousStatus = 5;
    string createdAt = 6;
    string updatedAt = 7;
}

message RegisterDto {
    string email = 1;
    string password = 2;
    string username = 3;
    optional string displayName = 4;
    string dateOfBirth = 5; 
}

message RegisterResult {
    message VerifyTokenDto {
        string verifyToken = 1;
    }

    com.common.MessageStatus status = 1;
    optional VerifyTokenDto payload = 2;
}

message LoginDto {
    oneof emailOrPhoneNumber {
        string email = 1;
        string phoneNumber = 2;
    }
    string password = 3;
}

message TokenDto {
    string accessToken = 1;
    string refreshToken = 2;
}

message LoginResult {
    com.common.MessageStatus status = 1;
    optional TokenDto payload = 2;
}

message VerifyDto {
    string id = 1;
}

message VerifyResult {
    com.common.MessageStatus status = 1;
}

message RefreshDto {
    string accountId = 1;
    string refreshToken = 2;
}

message RefreshResult {
    com.common.MessageStatus status = 1;
    optional TokenDto payload = 2;
}

message LogoutDto {
    string accountId = 1;
}

message LogoutResult {
    com.common.MessageStatus status = 1;
}

message AccountDto {
    string id = 1;
    string email = 2;
    string username = 3;
    optional string displayName = 4;
    string dateOfBirth = 5;
    optional string phoneNumber = 6;
    string avatar = 7;
    optional string pronouns = 8;
    optional string about = 9;
    string bannerColor = 10;
    AccountStatus status = 11;
    bool isAdmin = 12;
    string createdAt = 13;
    string updatedAt = 14;
    optional RelationshipDto relationshipWith = 15;
}

message GetAccountDto {
    string id = 1;
    optional AccountStatus status = 2;
    optional string includeRelationshipWith = 3;
}

message GetAccountResult {
    com.common.MessageStatus status = 1;
    optional AccountDto payload = 2;
}

message AccountsDto {
    repeated AccountDto accounts = 1;
}

message GetAccountsDto {
    optional string haveRelationshipWith = 1;
    optional RelationshipStatus relationshipStatus = 2;
}

message GetAccountsResult {
    com.common.MessageStatus status = 1;
    optional AccountsDto payload = 2;
}

message RelationshipWriteDto {
    string id = 1;
    RelationshipStatus status = 2;
}

message CreateOrUpdateRelationshipDto {
    RelationshipWriteDto account = 1;
    RelationshipWriteDto target = 2;
}

message CreateOrUpdateRelationshipResult {
    com.common.MessageStatus status = 1;
}

message DeleteRelationshipDto {
    string accountId = 1;
    string targetId = 2; 
}

message DeleteRelationshipResult {
    com.common.MessageStatus status = 1;
}

message GetFriendsDto {
    string accountId = 1;
}

message GetFriendsResult {
    com.common.MessageStatus status = 1;
    optional AccountsDto payload = 2;
}